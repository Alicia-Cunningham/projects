#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <time.h>

int genrandom(int, int);
int fork1(int);
int fork2(int);
int checkStat(int, int);

struct Stats
{
    char name[20];
    int strength;
    int intelligence;
    int luck;
};

int main()
{
    struct Stats Player;
    printf(" _    _ _   _ ____  _____  ______          _  __          ____  _      ______ \n");
    printf("| |  | | \\ | |  _ \\|  __ \\|  ____|   /\\   | |/ /    /\\   |  _ \\| |    |  ____|\n");
    printf("| |  | |  \\| | |_) | |__) | |__     /  \\  | ' /    /  \\  | |_) | |    | |__   \n");
    printf("| |  | | . ` |  _ <|  _  /|  __|   / /\\ \\ |  <    / /\\ \\ |  _ <| |    |  __|  \n");
    printf("| |__| | |\\  | |_) | | \\ \\| |____ / ____ \\| . \\  / ____ \\| |_) | |____| |____ \n");
    printf(" \\____/|_| \\_|____/|_|  \\_\\______/_\/    \\_\\_|\\_\\/_/    \\_\\____/|______|______|\n");
    printf("-----------------------------------------------------------------------------------------\n");

    printf("Welcome to Unbreakable! A Text-Based Adventure\n\n");
    printf("Please enter in a name for your character: ");
    fgets(Player.name, 20, stdin);
    for (int i = 0; Player.name[i] != '\0'; ++i)
    {
        if (Player.name[i] == '\n')
            Player.name[i] = ' ';
    }
    printf("\nYou have 20 points you may spend on your strength, intelligence, and luck stats. You may allocate them however you like.");
    printf("How many points do you want to allocate to strength?\n");
    scanf_s("%d", &Player.strength);
    int skill_points = 20;
    while (Player.strength > 20 || Player.strength < 0)
    {
        if (Player.strength > 20)
        {
            printf("Error! You may not allocate more than 20 points into a stat. Please enter a different number: ");
            scanf_s("%d", &Player.strength);
        }
        else if (Player.strength < 0)
        {
            printf("Error! You may not have a negative stat! Please enter a different number: ");
            scanf_s("%d", &Player.strength);
        }
    }
    skill_points -= Player.strength;

    printf("\nYou now have %d points left.\n", skill_points);
    printf("Please enter how many points you'd like to spend into intelligence: ");
    scanf_s("%d", &Player.intelligence);
    while (Player.intelligence > skill_points || Player.intelligence < 0)
    {
        if (Player.intelligence > skill_points)
        {
            printf("Error! You do not have enough points to do that! Please enter a different number: ");
            scanf_s("%d", &Player.intelligence);
        }
        else if (Player.intelligence < 0)
        {
            printf("Error! You may not have a negative stat! Please enter a different number: ");
            scanf_s("%d", &Player.intelligence);
        }
    }

    skill_points -= Player.intelligence;

    printf("\nYour remaining %d points have been put into your luck stat.\n", skill_points);

    Player.luck = skill_points;
    printf("-----------------------------------------------------------------------------------------\n");

    printf("Disaster has struck the fair city of Astergarn! The Princess Fairain has been kidnapped by the diabolical demon king.\n\n");


    int dec_fork1;
    printf("You come across a three-way fork in the road. You have the option to:\n");
    printf("1. Circle around the left of the castle.\n");
    printf("2. Go straight across the bridge, directly in the front door.\n");
    printf("3. Circle around the right of the castle.\n");
    printf("\nWhat do you do? (Enter the number of your action)\n");

    scanf_s("%d", &dec_fork1);
    while (fork1(dec_fork1) == -1)
    {
        printf("Error! Invalid direction entered. Please enter a different direction: ");
        scanf_s("%d", &dec_fork1);
    }

    switch (fork1(dec_fork1)) {
    case 0:
        printf("You tripped on a branch, fell into the moat and drowned. Tough luck.");
        printf("\nGAME OVER");
        _getch();
        return(EXIT_SUCCESS);
    case 1:
        printf("\nYou go straight towards the front door... To your surprise it opens for you.\nYou enter the castle cautiously.\n");
        break;
    case 2:
        printf("You decide to circle around to the right of the castle.\n");
        printf("Suddenly you hear the distinct twang of bows being fired.\n");
        printf("Soon enough, arrows shower down on your position and you are killed.\n");
        printf("GAME OVER");
        _getch();
        return(EXIT_SUCCESS);
        }

    printf("\nAfter entering the castle, you find your path blocked by a heavy boulder.\n");
    printf("\"Luckily I am the legendary hero. I should be able to move this easily!\" You think to yourself.\n");
    printf("\nSuddenly you hear a cacophony of footsteps coming from behind you.\n");
    printf("It's a horde of goblins heading your way! There's much too many of them for you to handle on your own!\n");
    printf("Press any key to continue.\n");
    _getch();
    printf("-----------------------------------------------------------------------------------------\n");
    if (checkStat(Player.strength, 7) == 1)
    {
        printf("\nYou get to work immediately and push the boulder with all your might.\n");
        printf("Thankfully, with your tremendous strength, you are able to move it out of the way in time and just barely escape the goblins.\n");
    }
    else if (checkStat(Player.strength, 7) == 0)
    {
        printf("\nYou begin to push the boulder with all your might. However, it just won't budge!\n");
        printf("You've severely underestimated the weight of this boulder...\n");
        printf("\nThe goblins are getting ever closer to your position. You've gotta think FAST to get out of this situation!\n");
        printf("Press any key to continue.\n");
        _getch();
        if (checkStat(Player.intelligence, 5) == 1)
        {
            printf("\nWith your quick wit, you remember that you brought along a set of noise makers.\n");
            printf("You quickly take them out and throw them off into another hallway, luring the goblin horde towards it.\n");
            printf("\nThis gives you just enough time to escape through a tiny crack to the side of the boulder. That was close!\n");
        }
        else if (checkStat(Player.intelligence, 5) == 0)
        {
            printf("\nYou've run out of options and panic begins to set in.\n");
            printf("The goblin army is now upon you and they make quick work of you through sheer numbers.\n");
            printf("GAME OVER");
            return(EXIT_SUCCESS);
        }
    }

    printf("\n\nAfter catching your breath. You steel youself and venture forward, your mind set on saving the princess.\n");
    printf("You find yourself in a large open room, a massive hole spans the length of it.\n");
    printf("\nThere are two bridges that stretch across the hole. One on the left and one on the right.\n");
    printf("1. The left bridge appears to be in disrepair and sways around in a concerning manner.\n");
    printf("2. The right bridge appears to be well-worn, but well-maintained. You'd feel more confident crossing this one.\n");
    printf("\nWhich bridge do you cross?\n");

    int dec_fork2;
    scanf_s("%d", &dec_fork2);
    while (fork2(dec_fork2) == -1)
    {
        printf("Error! Invalid direction entered. Please enter a different direction: ");
        scanf_s("%d", &dec_fork2);
    }
    printf("-----------------------------------------------------------------------------------------\n");
    switch (fork2(dec_fork2)) {
    case 0:
        printf("Against your best judgement, you decide to cross the more damaged bridge.\n");
        printf("The bridge makes creaking noises and the railing falls apart when you touch it.\n");
        printf("\nYou think to yourself, \"Why did I decide to go over this bridge!?!\"\n");
        printf("You almost make it across when suddenly the bridge begins to buckle under your weight. It's falling apart!\n");
        printf("You begin to panic as the ropes begin to snap and you begin to plummet down to the depths below.\n");
        printf("\nYou are not sure how you are going to get out of this one.\n");
        printf("Press any key to continue\n");
        _getch();

        int luck_boost;
        luck_boost = genrandom(1, 5);
        if ((luck_boost + Player.luck) >= 10)
        {
            printf("\nAs if by the grace of a god, you suddenly land on flying creature which happened to be below you.\n");
            printf("You wrestle with the creature and manage to gain control of it.\n");
            printf("You use your new mount to fly yourself to safety on the other side of the hole.\n");
            printf("That was too close for comfort!\n");
            break;
        }
        else if ((luck_boost + Player.luck) < 10)
        {
            printf("You have no options as you quiety fall to the seemingly endless abyss.\n");
            printf("You accept your fate and plummet to your death.\n");
            printf("GAME OVER\n");
            _getch();
            return(EXIT_SUCCESS);
        }
    case 1:
        printf("\nYou go with your instinct and cross the bridge that seemed to be better taken care of.\n");
        printf("It sways under your weight, but it holds true as you cross the gap\n");
        printf("You make it across the hole safely.\n");
        printf("Press any key to continue.\n");
        _getch();
        break;
    }
    printf("-----------------------------------------------------------------------------------------\n");
    printf("\nAfter making it across the gap you come across a large ornate door. You are sure this is the entrance to the throne room.\n");
    printf("You ready yourself and you push open the doors.\n");
    printf("\nIt reveals a large room, with a large pile of golden treasure in the middle.\n");
    printf("At the top of the pile sits the demon king, on his golden throne.\n");
    printf("\"You have done well to make it this far, Hero %s\", he exclaims.\n", Player.name);
    printf("I have been waiting for you.\n");
    printf("\nHe steps off his throne and summons a large, demonic greatsword.\n");
    printf("Well, you've been waiting for this haven't you? Have at you!\n");
    printf("Press any key to continue.\n");
    _getch();
    printf("-----------------------------------------------------------------------------------------\n");
    int player_health = 10, boss_health = 20;

    while (player_health > 0 && boss_health > 0)
    {
        printf("\nYour health: %d\n", player_health);
        printf("Boss health: %d\n", boss_health);
        int p_attack, b_attack;
        p_attack = (genrandom(1, 5) + (Player.strength / 2));
        printf("%s attacks! He does %d damage!\n", Player.name, p_attack);
        boss_health -= p_attack;
        b_attack = 2;
        printf("The Demon King attacks! He does %d damage!\n", b_attack);
        player_health -= b_attack;
        printf("Press any key to attack again!\n");
        _getch();
    }
    printf("-----------------------------------------------------------------------------------------\n");
    if (player_health <= 0)
    {
        printf("\nThe demon king knocks you down and stands over you.\n");
        printf("\"This was all you had? Pathetic.\"\n");
        printf("You try to muster your strength to stand up, but you're too exhausted and hurt.\n");
        printf("The Demon King slashes at you one last thing, killing you.\n");
        printf("GAME OVER");
    }
    else if (boss_health <= 0);
    {
        printf("\nWith one great swing, you knock the Demon King down to his knees.\n");
        printf("\"So this is the power of the legendary hero, huh?\", he says gasping for his breath.\n");
        printf("\"Well do it then, kill me.\"\n");
        printf("Doing exactly as he asks, you swing one final time, ending the Demon King's life once and for all.\n");
        printf("You've done it, you've slain the Demon King and were able to save the princess.\n");
        printf("You have brought peace, freedom, justice, and security to the city of Astergarn!\n");
        printf("THE END");
    }

    _getch();
    return(EXIT_SUCCESS);

}

int genrandom(int min, int max)
{
    int number;
    srand(time(0));
    number = (rand() % (max - min + 1) + min);
    return(number);
}

int fork1(int direction)
{
    switch (direction) {
    case 1:
        return(0);
    case 2:
        return(1);
    case 3:
        return(2);
    default:
        return(-1);
    }
}

int fork2(int direction)
{
    switch (direction) {
    case 1:
        return(0);
    case 2:
        return(1);
    default:
        return(-1);
    }
}

int checkStat(int stat, int limit)
{
    if (stat >= limit)
        return(1);
    else if (stat < limit)
        return(0);
}
